{
  Sources: [
    {
      FileName: ObservableAsPropertyAttribute.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;

namespace ReactiveGenerator
{
    /// <summary>
    /// Indicates that a property should be implemented as an ObservableAsPropertyHelper instance.
    /// </summary>
    [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)]
    public sealed class ObservableAsPropertyAttribute : Attribute
    {
        /// <summary>
        /// Initializes a new instance of the ObservableAsPropertyAttribute class.
        /// </summary>
        public ObservableAsPropertyAttribute() { }
    }
}
    },
    {
      FileName: TestViewModel.ObservableAsProperty.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;
using ReactiveUI;

/// <summary>
/// A partial class implementation with observable property helpers for TestViewModel{T}.
/// </summary>
public partial class TestViewModel<T> where T : class
{
    /// <summary>
    /// The ObservableAsPropertyHelper instance for the Value property.
    /// </summary>
    private readonly ObservableAsPropertyHelper<T?> _valueHelper;

    /// <summary>
    /// Gets the current value of type T from the observable sequence.
    /// </summary>
    /// <value>The current value from the observable sequence.</value>
    public partial T? Value
    {
        get => _valueHelper.Value;
    }
}

    }
  ],
  Diagnostics: null
}