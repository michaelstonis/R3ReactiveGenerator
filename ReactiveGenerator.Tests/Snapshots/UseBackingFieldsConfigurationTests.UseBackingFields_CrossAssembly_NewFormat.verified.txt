{
  Sources: [
    {
      FileName: DerivedClass.ReactiveProperties.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System.ComponentModel;
using System.Runtime.CompilerServices;

/// <summary>
/// A partial class implementation for DerivedClass.
/// </summary>
public partial class DerivedClass
{
    private string _localProp;

    private static readonly PropertyChangedEventArgs _localPropChangedEventArgs = new PropertyChangedEventArgs(nameof(LocalProp));

    public partial string LocalProp
    {
        get => _localProp;
        set
        {
            if (!Equals(_localProp, value))
            {
                _localProp = value;
                OnPropertyChanged(_localPropChangedEventArgs);
            }
        }
    }
}

    },
    {
      FileName: IgnoreReactiveAttribute.g.cs,
      Source:
using System;

[AttributeUsage(AttributeTargets.Property | AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
sealed class IgnoreReactiveAttribute : Attribute
{
    public IgnoreReactiveAttribute() { }
}
    },
    {
      FileName: ReactiveAttribute.g.cs,
      Source:
using System;

[AttributeUsage(AttributeTargets.Property | AttributeTargets.Class, Inherited = true, AllowMultiple = false)]
sealed class ReactiveAttribute : Attribute
{
    public ReactiveAttribute() { }
}
    }
  ],
  Diagnostics: null
}