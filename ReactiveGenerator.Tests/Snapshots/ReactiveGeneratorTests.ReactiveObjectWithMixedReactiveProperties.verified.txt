{
  Sources: [
    {
      FileName: IgnoreReactiveAttribute.g.cs,
      Source:
// <auto-generated/>
using System;

[AttributeUsage(AttributeTargets.Property | AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
sealed class IgnoreReactiveAttribute : Attribute
{
    public IgnoreReactiveAttribute() { }
}
    },
    {
      FileName: MixedViewModel.ReactiveProperties.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using ReactiveUI;

/// <summary>
/// A partial class implementation for MixedViewModel.
/// </summary>
public partial class MixedViewModel
{
    public partial string ReactiveProperty
    {
        get => field;
        set => this.RaiseAndSetIfChanged(ref field, value);
    }

    public partial int? NullableReactiveProperty
    {
        get => field;
        set => this.RaiseAndSetIfChanged(ref field, value);
    }
}

    },
    {
      FileName: ReactiveAttribute.g.cs,
      Source:
// <auto-generated/>
using System;

[AttributeUsage(AttributeTargets.Property | AttributeTargets.Class, Inherited = true, AllowMultiple = false)]
sealed class ReactiveAttribute : Attribute
{
    public ReactiveAttribute() { }
}
    }
  ],
  Diagnostics: null
}