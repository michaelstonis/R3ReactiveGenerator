{
  Sources: [
    {
      FileName: Container.NestedViewModel.ObservableAsProperty.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;
using ReactiveUI;

public partial class Container
{
    /// <summary>
    /// A partial class implementation with observable property helpers for Container.NestedViewModel.
    /// </summary>
    public partial class NestedViewModel
    {
        /// <summary>
        /// The ObservableAsPropertyHelper instance for the Value property.
        /// </summary>
        private readonly ObservableAsPropertyHelper<string?> _valueHelper;

        /// <summary>
        /// Gets the current value of type string from the observable sequence.
        /// </summary>
        /// <value>The current value from the observable sequence.</value>
        public partial string? Value
        {
            get => _valueHelper.Value;
        }
    }
}

    },
    {
      FileName: ObservableAsPropertyAttribute.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;

namespace ReactiveGenerator
{
    /// <summary>
    /// Indicates that a property should be implemented as an ObservableAsPropertyHelper instance.
    /// </summary>
    [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)]
    public sealed class ObservableAsPropertyAttribute : Attribute
    {
        /// <summary>
        /// Initializes a new instance of the ObservableAsPropertyAttribute class.
        /// </summary>
        public ObservableAsPropertyAttribute() { }
    }
}
    }
  ],
  Diagnostics: null
}