{
  Sources: [
    {
      FileName: ObservableAsPropertyAttribute.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;

namespace ReactiveGenerator
{
    [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)]
    public sealed class ObservableAsPropertyAttribute : Attribute
    {
        public ObservableAsPropertyAttribute() { }
    }
}
    },
    {
      FileName: TestViewModel.ObservableAsProperty.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;
using ReactiveUI;

public partial class TestViewModel
{
    private ObservableAsPropertyHelper<global::System.Collections.Generic.List<string>> _stringListHelper;

    public partial global::System.Collections.Generic.List<string> StringList
    {
        get => _stringListHelper.Value;
    }

    private ObservableAsPropertyHelper<global::System.Collections.Generic.Dictionary<int, string>> _intStringMapHelper;

    public partial global::System.Collections.Generic.Dictionary<int, string> IntStringMap
    {
        get => _intStringMapHelper.Value;
    }

    private ObservableAsPropertyHelper<(string Name, int Age)> _personInfoHelper;

    public partial (string Name, int Age) PersonInfo
    {
        get => _personInfoHelper.Value;
    }
}

    }
  ],
  Diagnostics: null
}