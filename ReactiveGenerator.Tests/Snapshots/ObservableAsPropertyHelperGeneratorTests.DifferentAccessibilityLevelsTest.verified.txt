{
  Sources: [
    {
      FileName: ObservableAsPropertyAttribute.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;

namespace ReactiveGenerator
{
    [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)]
    public sealed class ObservableAsPropertyAttribute : Attribute
    {
        public ObservableAsPropertyAttribute() { }
    }
}
    },
    {
      FileName: TestViewModel.ObservableAsProperty.g.cs,
      Source:
// <auto-generated/>
#nullable enable

using System;
using ReactiveUI;

public partial class TestViewModel
{
    private ObservableAsPropertyHelper<string> _publicValueHelper;

    public partial string PublicValue
    {
        get => _publicValueHelper.Value;
    }

    private ObservableAsPropertyHelper<string> _protectedValueHelper;

    protected partial string ProtectedValue
    {
        get => _protectedValueHelper.Value;
    }

    private ObservableAsPropertyHelper<string> _privateValueHelper;

    private partial string PrivateValue
    {
        get => _privateValueHelper.Value;
    }

    private ObservableAsPropertyHelper<string> _internalValueHelper;

    internal partial string InternalValue
    {
        get => _internalValueHelper.Value;
    }
}

    }
  ],
  Diagnostics: null
}